package com.dbs.cb.gapi.core.repository;

import com.dbs.cb.gapi.core.entity.AccountStatusMappingEntity;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.Optional;

@Repository
@Lazy
@ConditionalOnProperty(prefix = "config", name = "loading-source", havingValue = "database")
public interface AccountStatusMappingRepository extends JpaRepository<AccountStatusMappingEntity, Long> {

    @Query("SELECT e FROM AccountStatusMappingEntity e WHERE e.configKey = :configKey AND e.isActive = true")
    Optional<AccountStatusMappingEntity> findByConfigKeyAndIsActiveTrue(@Param("configKey") String configKey);

    @Query("SELECT e FROM AccountStatusMappingEntity e WHERE e.configKey = :configKey")
    Optional<AccountStatusMappingEntity> findByConfigKey(@Param("configKey") String configKey);
}
