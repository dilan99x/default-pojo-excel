// Resolves the product code from the current JSON context (row or root).
// If the mapping's pointer has "/*", we trim to the segment AFTER the last wildcard
// so it can be resolved relative to the current row object.
private String extractProductCodeForContext(JsonNode contextNode, FieldMapping productField) {
    if (productField == null || contextNode == null) return null;

    String sp = productField.getSourcePointer();
    if (sp == null || sp.isEmpty()) return null;

    // If the pointer contains a wildcard, we assume we're executing in the context
    // of a single array element (row). Use the suffix after the LAST "/*".
    if (sp.contains("/*")) {
        int last = sp.lastIndexOf("/*");
        String relative = sp.substring(last + 2); // e.g. "/pnsProductCode"
        JsonNode n = contextNode.at(relative);
        if (!n.isMissingNode() && !n.isNull()) {
            return n.asText();
        }

        // Fallback: try absolute pointer in case this transformer is invoked at the root
        n = contextNode.at(sp);
        return (n.isMissingNode() || n.isNull()) ? null : n.asText();
    }

    // No wildcard â€” normal extraction works
    return com.dbs.cb.gapi.core.utils.JsonUtils.extractText(contextNode, productField);
}



