<configuration>
  <!-- pull Spring props -->
  <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>
  <springProperty scope="context" name="ENV"      source="spring.application.env"/>

  <!-- SYNC appender used by most loggers -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} app.id=${APP_NAME} env=${ENV} correlation.id=%X{x-correlation-id:-''} %msg%n</pattern>
    </layout>
  </appender>

  <!-- ASYNC wrapper used ONLY by the payload logger -->
  <appender name="ASYNC_PAYLOAD" class="ch.qos.logback.classic.AsyncAppender">
    <queueSize>8192</queueSize>
    <discardingThreshold>0</discardingThreshold> <!-- don't auto-drop DEBUG/TRACE -->
    <neverBlock>true</neverBlock>                 <!-- drop when full instead of blocking request thread -->
    <appender-ref ref="CONSOLE"/>
  </appender>

  <!-- EXAMPLE: your other package(s) stay synchronous -->
  <logger name="com.dbs.cb" level="INFO" additivity="false">
    <appender-ref ref="CONSOLE"/>
  </logger>

  <!-- CHOOSE ONE of the following based on how you get the logger in code -->

  <!-- (A) If you use LoggerFactory.getLogger(AsyncAPIPayloadLogger.class) -->
  <logger name="com.dbs.c2e.mstd.log.AsyncAPIPayloadLogger" level="INFO" additivity="false">
    <appender-ref ref="ASYNC_PAYLOAD"/>
  </logger>

  <!-- (B) If you use LoggerFactory.getLogger("AsyncAPIPayloadLogger") -->
  <!--
  <logger name="AsyncAPIPayloadLogger" level="INFO" additivity="false">
    <appender-ref ref="ASYNC_PAYLOAD"/>
  </logger>
  -->

  <!-- Root remains synchronous -->
  <root level="ERROR">
    <appender-ref ref="CONSOLE"/>
  </root>
</configuration>
